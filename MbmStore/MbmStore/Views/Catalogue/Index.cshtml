@using MbmStore.Models;
@model IEnumerable<Product>

@{
    ViewBag.Title = "Catalogue";
}



@helper RenderBook(Book book)
{
    <div class="col col-lg-6">
        <div class="card product" style="width: 18rem;">
            <img src="/Content/Images/@book.ImageUrl" alt="@book.Title">
            <div class="card-body">
                <h5 class="card-title">@book.Title</h5>
                <p class="card-text">Author: @book.Author</p>
                <p class="card-text">Price: @String.Format("{0:0.00}", book.Price)$</p>
                @using (Html.BeginForm("AddToCart", "Cart"))
                {
                    @Html.Hidden("ProductId", book.ProductId)
                    @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                    <input type="submit" class="btn btn-primary" value="Add to cart" />
                }
            </div>
        </div>
    </div>
}



@helper RenderMovie(Movie movie)
{
    <div class="col col-lg-6">

        <div class="card product" style="width: 18rem;">
            <img src="/Content/Images/@movie.ImageUrl" alt="@movie.Title" />
            <div class="card-body">
                <strong>Title:</strong> @movie.Title<br />
                Director: @movie.Director<br>
                Price: @String.Format("{0:0.00}", movie.Price) <br /><br />
                @using (Html.BeginForm("AddToCart", "Cart"))
                {
                    @Html.Hidden("ProductId", movie.ProductId)
                    @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                    <input type="submit" class="btn btn-primary" value="Add to cart" />
                }
            </div>
        </div>
    </div>
}



@helper RenderMusicCD(MusicCD musicCD)
{
    <div class="col col-lg-6">

        <div class="card product" style="width: 18rem;">
            <img src="/Content/Images/@musicCD.ImageUrl" alt="@musicCD.Title" />
            <div class="card-body">
                <strong>Title:</strong> @musicCD.Title<br />
                <strong>Director:</strong> @musicCD.Artist<br>
                <strong>Price:</strong> @String.Format("{0:0.00}", musicCD.Price) <br /><br />


                @foreach (Track track in musicCD.Tracks)

                {

                    <ul>
                        <li> @track.Title (@track.Composer)    @track.Length.Minutes:@track.Length.Seconds </li>
                    </ul>
                }
                <p><strong>Total Playing Time:</strong> @musicCD.GetPlayingTime()</p>
                @using (Html.BeginForm("AddToCart", "Cart"))
                {
                    @Html.Hidden("ProductId", musicCD.ProductId)
                    @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                    <input type="submit" class="btn btn-primary" value="Add to cart" />
                }
            </div>
        </div>

    </div>
}


<h2>Books</h2>
<div class="row">
    @foreach (Book book in Model.OfType<Book>().ToList())
    {
        @RenderBook(book);
    }

</div>

<h2>Movies</h2>
<div class="row">
    @foreach (Movie movie in Model.OfType<Movie>().ToList())
    {
        @RenderMovie(movie);

    }
</div>

<h2>The CDs</h2>
<div class="row">
    @foreach (MusicCD musicCD in Model.OfType<MusicCD>().ToList())
    {
        @RenderMusicCD(musicCD);

    }
</div>



